name: "CodeQL for Java Maven"

on:
  push:
    branches: [ "main", "master" ]  # 根据项目主分支名称调整
  pull_request:
    branches: [ "main", "master" ]
  schedule:
    - cron: '30 5 * * 0'  # 每周日凌晨5:30运行

jobs:
  analyze:
    name: Analyze Java Code
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: java-kotlin  # 支持 Java 和 Kotlin 混合项目
            build-mode: manual     # Maven 项目需要手动构建

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 确保获取完整历史，有助于更准确的分析

    # 配置 Java 环境（根据项目使用的 Java 版本调整）
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven  # 缓存 Maven 依赖，加速构建

    # 初始化 CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # 可选：添加额外的查询规则集
        # queries: security-extended,security-and-quality

    # 使用 Maven 构建项目（关键步骤，CodeQL 需要分析编译后的字节码）
    - name: Build with Maven
      if: matrix.build-mode == 'manual'
      run: |
        # 执行 Maven 构建命令，跳过测试以加速分析（根据需要调整）
        mvn clean package -DskipTests

    # 执行 CodeQL 分析
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
